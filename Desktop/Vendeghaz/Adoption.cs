// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Vendeghaz;
//
//    var adoption = Adoption.FromJson(jsonString);

namespace Vendeghaz
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Adoption
    {
        [JsonProperty("a_id")]
        public long A_id { get; set; }

        [JsonProperty("g_id")]
        public long G_id { get; set; }

        [JsonProperty("u_id")]
        public long U_id { get; set; }

        [JsonProperty("a_date")]
        public DateTimeOffset A_date { get; set; }
    }

    public partial class Adoption
    {
        public static Adoption[] FromJson(string json) => JsonConvert.DeserializeObject<Adoption[]>(json, Vendeghaz.AdoptionConverter.Settings);
    }

    public static class AdoptionSerialize
    {
        public static string ToJson(this Adoption[] self) => JsonConvert.SerializeObject(self, Vendeghaz.AdoptionConverter.Settings);
    }

    internal static class AdoptionConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}