// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Vendeghaz;
//
//    var guests = Guests.FromJson(jsonString);

namespace Vendeghaz
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Guests
    {
        [JsonProperty("g_id")]
        public long G_id { get; set; }

        [JsonProperty("g_name")]
        public string G_name { get; set; }

        [JsonProperty("g_species")]
        public string G_species { get; set; }

        [JsonProperty("g_gender")]
        public string G_gender { get; set; }

        [JsonProperty("g_birthdate")]
        public DateTimeOffset G_birthdate { get; set; }

        [JsonProperty("g_in_date")]
        public DateTimeOffset G_inDate { get; set; }

        [JsonProperty("g_in_place")]
        public string G_inPlace { get; set; }

        [JsonProperty("g_other")]
        public string G_other { get; set; }

        [JsonProperty("g_image")]
        public string G_image { get; set; }

        [JsonProperty("created_at")]
        public DateTimeOffset Created_at { get; set; }

        [JsonProperty("updated_at")]
        public DateTimeOffset? Updated_at { get; set; }

        [JsonProperty("deleted_at")]
        public DateTimeOffset? Deleted_at { get; set; }
    }

    public partial class G_image
    {
        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("data")]
        public long[] Data { get; set; }
    }

    public partial class Guests
    {
        public static Guests[] FromJson(string json) => JsonConvert.DeserializeObject<Guests[]>(json, Vendeghaz.GuestsConverter.Settings);
    }

    public static class GuestsSerialize
    {
        public static string ToJson(this Guests[] self) => JsonConvert.SerializeObject(self, Vendeghaz.GuestsConverter.Settings);
    }

    internal static class GuestsConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
