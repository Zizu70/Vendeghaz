// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Vendeghaz;
//
//    var users = Users.FromJson(jsonString);

namespace Vendeghaz
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Users
    {
        [JsonProperty("u_id")]
        public long U_id { get; set; }

        [JsonProperty("u_name")]
        public string U_name { get; set; }

        [JsonProperty("u_email")]
        public string U_email { get; set; }

        [JsonProperty("u_password")]
        public string U_password { get; set; }

        [JsonProperty("u_role")]
        public string U_role { get; set; }

        [JsonProperty("created_at")]
        public DateTimeOffset Created_at { get; set; }

        [JsonProperty("updated_at")]
        public DateTimeOffset? Updated_at { get; set; }

        [JsonProperty("deleted_at")]
        public DateTimeOffset? Deleted_at { get; set; }
    }

    public partial class Users
    {
        public static Users[] FromJson(string json) => JsonConvert.DeserializeObject<Users[]>(json, Vendeghaz.UsersConverter.Settings);
    }

    public static class UsersSerialize
    {
        public static string ToJson(this Users[] self) => JsonConvert.SerializeObject(self, Vendeghaz.UsersConverter.Settings);
    }

    internal static class UsersConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
